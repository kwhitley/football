{"version":3,"sources":["/src/server/index.js","/src/server/api.js","/src/server/imager/dropbox.js","/src/server/db/index.js","/src/server/users/users.js","/src/server/imager/api.js","/src/server/imager/imager.js","/src/server/imager/get-base-image.js","/src/server/users/api.js","/src/server/users/security.js","/src/server/imager/cache-warmer.js"],"names":[],"mappings":"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","file":"","sourcesContent":["require('dotenv').config()\n\n// include other main deps\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport compression from 'compression'\nimport session from 'express-session'\n\nimport path from 'path'\nimport http from 'http'\nimport fs from 'fs'\nimport favicon from 'serve-favicon'\n\nimport api from './api'\nimport imagerApi from './imager/api'\nimport usersApi from './users/api'\nimport { cacheWarmer } from './imager/cache-warmer'\n\n// instantiate express\nconst app = express()\nconst isProduction = process.env.NODE_ENV === 'production'\n\napp.use(session({\n  secret: 'my cat',\n  resave: false,\n  saveUninitialized: true,\n}))\napp.use(cookieParser())\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(compression())\n\n// static serving from /dist/client\nconst staticPath = path.join(__dirname, `../${isProduction ? 'dist' : '.dist-dev'}/client`)\nconsole.log(`serving static content from ${staticPath}`)\napp.use(express.static(staticPath))\napp.use(favicon(path.join(__dirname, '../src/client/images', 'favicon.ico')))\n\n// add api layers\napp.use('/api', api)\napp.use('/user', usersApi)\napp.use('/i', imagerApi)\n\n// 404\napp.get('*', (req, res) => {\n  res.sendStatus(404)\n})\n\nconst serverPort = process.env.PORT || 3000\nconst server = http.createServer(app)\n\nserver.listen(serverPort)\nconsole.log(`Express server @ http://localhost:${serverPort} (${isProduction ? 'production' : 'development'})\\n`)\n\n// warm the cache\ncacheWarmer()\n","import express from 'express'\nimport globby from 'globby'\nimport { getIndex, download } from './imager/dropbox'\nimport dropboxFs from 'dropbox-fs'\nimport apicache from 'apicache'\n\nimport { collection } from './db'\nimport { isAuthenticated, isAdmin } from './users/users'\n\n// create an express app\nconst app = express()\nconst cache = apicache.middleware\n\napp.get('/env', isAdmin, (req, res) => {\n  res.json(process.env)\n})\n\napp.get('/images', cache('30 seconds'), (req, res) => {\n  getIndex().then(async (dropboxImages) => {\n    let images = await collection('images')\n                      .find({})\n                      .catch((err) => res.status(500).json(err))\n\n    let existingIds = images.map(i => i.id)\n    let dropboxIds = dropboxImages.map(i => i.id).filter(i => i)\n    let changes = false\n\n    for (var id of existingIds) {\n      if (!dropboxIds.includes(id)) {\n        await collection('images').remove({ id })\n        console.log('deleting database and local content for image', id)\n      }\n    }\n\n    for (var id of dropboxIds) {\n      if (!existingIds.includes(id)) {\n        await collection('images').update(id, { id })\n        console.log('add database and local content for image', id)\n        changes = true\n      }\n    }\n\n    // get latest image list after patching\n    if (changes) {\n      images = await collection('images')\n                      .find({})\n                      .catch((err) => res.status(500).json(err))\n    }\n\n    dropboxImages = dropboxImages\n      .map(dimage => Object.assign(dimage, images.find(i => i.id === dimage.id)))\n\n    res.json(dropboxImages)\n  })\n})\n\napp.patch('/images/:id', isAuthenticated, async (req, res) => {\n  let { id } = req.params\n\n  console.log('patching image', id, req.body)\n\n  let image = await collection('images')\n                      .update(id, req.body)\n                      .then((response) => res.json(response))\n                      .catch((err) => res.status(400).json(err))\n})\n\napp.get('/images/:id', async (req, res) => {\n  let { id } = req.params\n\n  // insert doc\n  await collection('images')\n          .update(id, { id, bar: 'baz' })\n          .catch(res.status(500).json)\n\n  // get updated/created doc\n  let doc = await collection('images')\n                    .find({ id })\n                    .catch(res.status(500).json)\n\n  res.json(doc)\n})\n\n// 404\napp.get('*', (req, res) => {\n  res.sendStatus(404)\n})\n\n// export the express app\nexport default app\n","import { Dropbox } from 'dropbox'\nimport fetch from 'isomorphic-fetch'\n\nconst { DROPBOX_ACCESS_TOKEN } = process.env\n\nconst toFileItem = (i) => ({\n  id: i.rev,\n  type: i['.tag'],\n  filename: i.name,\n  folder: i.path_display.replace(/(.*\\/).*/gi, '$1'),\n  size: i.size,\n  date: i.server_modified,\n})\n\nexport const getIndex = () => {\n  console.log('dropbox:filesListFolder')\n  var dbx = new Dropbox({ accessToken: DROPBOX_ACCESS_TOKEN, fetch })\n\n  return dbx\n    .filesListFolder({\n      recursive: true,\n      path: '',\n    })\n    .then((r) => r.entries.map(toFileItem))\n    .catch(console.error)\n}\n\nexport const download = (path) => {\n  console.log('dropbox:filesDownload', { path: `rev:${path}` })\n  var dbx = new Dropbox({ accessToken: DROPBOX_ACCESS_TOKEN, fetch })\n\n  return dbx.filesDownload({ path: `rev:${path}` })\n    .then((response) => {\n      console.log(`${path} downloaded`)\n      return response.fileBinary\n    })\n    .catch(console.error)\n}\n","import { MongoClient } from 'mongodb'\n\nconst {\n  DB_USER,\n  DB_PASSWORD,\n  DB_DATABASE,\n  DB_URI,\n} = process.env\n\nconst shards = (uri) => Array(3).fill(0).map((v,i) => uri.replace(/^(.*)?-(.*)$/, `$1-shard-00-0${i}-$2`))\nconst replicaSet = (uri) => uri.replace(/^(.*)?-(.*)$/, `$1-shard-0`)\n\nexport const URI = `mongodb://${DB_USER}:${DB_PASSWORD}@${shards(DB_URI).join(',')}/${DB_DATABASE}?replicaSet=${replicaSet(DB_URI)}&ssl=true&authSource=admin`\n\nlet database = undefined\n\nMongoClient\n  .connect(URI, { useNewUrlParser: true })\n  .then((client) => {\n    console.log('connected to database.')\n    database = client.db(DB_DATABASE)\n  })\n  .catch((err) => {\n    console.log('error', err)\n  })\n\nconst find = (collection) => (match) => collection.find(match).toArray()\n\nconst remove = (collection) => (condition) => collection.deleteOne(condition || { safe: true })\n\nconst create = (collection) => (content = {}) => collection.insert(content)\n\nconst update = (collection) =>\n  (id, content = {}) =>\n    collection\n      .updateOne(\n        { id },\n        { $set: content },\n        { upsert: true }\n      )\n\nexport const collection = (name) => {\n  return {\n    create: create(database.collection(name)),\n    find: find(database.collection(name)),\n    update: update(database.collection(name)),\n    remove: remove(database.collection(name)),\n  }\n}\n","import { collection } from '../db'\nimport { getHash, checkPassword } from './security'\n\nexport const getUsersList = () => collection('users').find({})\n\nexport const createUser = async (profile) =>\n  await collection('users')\n    .create(Object.assign({\n      dateCreated: new Date()\n    }, profile))\n\nexport const getUser = async (match) => collection('users').find(match)\n\nexport const isAuthenticated = (req, res, next) =>\n  req.session.user\n  ? next()\n  : res.sendStatus(401)\n\nexport const isAdmin = (req, res, next) =>\n  req.session.user & req.session.user.email === 'krwhitley@gmail.com'\n  ? next()\n  : res.sendStatus(401)\n","import express from 'express'\nimport { getImage } from './imager.js'\n\nconst app = express()\n\n// single route catches all requests to imager and passes them to worker\napp.get('*.(png|jpg)', (req, res) => {\n  getImage(req.path)\n    .then((image) => {\n      res.type('image/jpeg')\n      res.set('Cache-Control', \"public, max-age=345600\") // 4 days\n      res.set('Expires', new Date(Date.now() + 345600000).toUTCString())\n\n      res.end(image)\n    })\n    .catch((err) => {\n      console.error(err)\n      res.status(500).send(err)\n    })\n})\n\nexport default app\n\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { download } from './dropbox'\nimport { getBaseImage } from './get-base-image'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\nexport const getImage = (requestedImagePath) => {\n  console.log('getImage:', requestedImagePath)\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let optionsSegment = decodedPath.replace(/^.*::(.*)\\.\\w{3,4}$/i, '$1') || ''\n    let revisionId = decodedPath.replace(/.*?(\\w+).*/g, '$1')\n    let options = optionsSegment\n                    .split(',')\n                    .reduce((a, b) => {\n                      let [ key, value ] = b.split('=')\n\n                      if (value === undefined) {\n                        a[key] = true\n                      } else {\n                        let numValue = Number(value)\n\n                        a[key] = isNaN(numValue) ? value : numValue\n                      }\n\n                      return a\n                    }, {})\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n    let file = await getBaseImage(`/${revisionId}.jpg`)\n      .catch((err) => console.error('failure fetching image', err))\n\n    let image = sharp(file).rotate()\n\n    if (options.preview) {\n      if (options.width) {\n        options.width = 75\n      }\n\n      if (options.height) {\n        options.height = 75\n      }\n\n      options.quality = 70\n      options.fit = (options.height && options.width ? 'cover' : 'inside'\n\n      console.log('generating preview', options)\n    } else {\n      console.log('generating fragment', options)\n    }\n\n    let data = await image\n      .resize({\n        width: options.width,\n        height: options.height,\n        fit: options.fit || 'cover',\n      })\n      .jpeg({\n        quality: options.quality || 90,\n      })\n      .toFile(savepath)\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  })\n})\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { download } from './dropbox'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// gets image locally, or downloads from dropbox and returns the saved image\nexport const getBaseImage = async (requestedImagePath) => {\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let revisionId = decodedPath.replace(/.*?(\\w+).*/g, '$1')\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n    let originalpath = savefolder + '/' + revisionId + '.jpg'\n\n    let image = await fs.promises.readFile(originalpath)\n                        .catch((err) => console.log('loading image from dropbox...'))\n\n    if (!image) {\n      let binary = await download(revisionId)\n\n      console.log('making savefolder', savefolder)\n      // ensure folder exists before file stream opening\n      await fs.promises.mkdir(savefolder, { recursive: true }).catch(e => e)\n\n      console.log('saving base image', originalpath)\n      let image = await sharp(binary)\n        .rotate()\n        .jpeg({ quality: 95 })\n        .toFile(originalpath)\n    }\n\n    console.log('returning', savepath)\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  }\n}\n","import express from 'express'\nimport Blowfish from 'xs-blowfish'\nimport { isAuthenticated, validateUser, createUser, getUser, getUsersList } from './users'\nimport { getHash, checkPassword } from './security'\n\nconst app = express()\n\n// app.post('/signup', async (req, res) => {\n//   let user = await createUser(req.body)\n\n//   if (user) {\n//     res.json(req.session.user)\n//   }\n// })\n\napp.get('/all', isAuthenticated, async (req, res) => {\n  let users = await getUsersList()\n    .catch((err) => res.status(400).json(err))\n\n  console.log('users', users)\n\n  res.json(users)\n})\n\napp.get('/hash/:password', async (req, res) => {\n  let hash = await getHash(req.params.password)\n\n  res.send(hash)\n})\n\napp.get('/profile', isAuthenticated, (req, res) => {\n  res.json(req.session.user)\n})\n\napp.get('/logout', (req, res) => {\n  delete req.session.user\n\n  res.sendStatus(200)\n})\n\napp.post('/login', async (req, res) => {\n  let { email, password } = req.body\n\n  if (!email || !password) {\n    return res.sendStatus(400)\n  }\n\n  let user = await getUser({ email })\n                    .then(users => users[0])\n                    .catch(() => {\n                      console.log('user not found with email', email)\n                      res.sendStatus(401)\n                    })\n\n  if (user) {\n    console.log('user found', user)\n    let valid = await checkPassword(password, user.password)\n\n    if (valid) {\n      // decrpyt API token\n      // let bf = new Blowfish(user.password)\n      // user.apiKey = bf.decrypt(user.apiKey)\n\n      // console.log('decrypted API key', user.apiKey)\n\n      delete user.password\n      delete user._id\n      delete user.apiKey\n\n      req.session.user = user\n      res.json(user)\n    } else {\n      res.sendStatus(401)\n    }\n  } else {\n    res.sendStatus(401)\n  }\n})\n\napp.post('/signup', async (req, res) => {\n  let { email, password, passwordConfirmation, apiKey } = req.body\n\n  if (!email || !password) {\n    return res.sendStatus(400)\n  }\n\n  let existingUser = await getUser({ email })\n                            .then(users => users[0])\n                            .catch(() => {})\n\n  if (existingUser) {\n    return res.sendStatus(409)\n  }\n\n  password = await getHash(password)\n\n  console.log('hash', password)\n\n  // encrypt apiKey based on new password\n  let bf = new Blowfish(password)\n  console.log('apiKey', apiKey)\n  apiKey = apiKey ? bf.encrypt(apiKey) : undefined\n  console.log('encrypted apiKey', apiKey)\n\n  await createUser({ email, password, apiKey }).catch(() => res.sendStatus(401))\n\n  let user = await getUser({ email, password })\n                    .then(users => users[0])\n                    .then(user => {\n                      delete user.password\n                      delete user._id\n                      delete user.apiKey\n\n                      return user\n                    })\n                    .catch(() => res.sendStatus(401))\n\n  if (user) {\n    req.session.user = user\n    res.json(user)\n  }\n})\n\nexport default app\n","import bcrypt from 'bcryptjs'\n\nconst saltRounds = 8\n\nexport const getHash = (password) => bcrypt.hash(password, saltRounds)\n\nexport const checkPassword = (password, hash) => bcrypt.compare(password, hash)\n","import { getIndex } from './dropbox'\nimport { getBaseImage } from './get-base-image'\nimport { getImage } from './imager.js'\n\nconst loadImages = async (images) => {\n  for (var image of images) {\n    await getBaseImage(`/${image.id}.jpg`)\n    await getImage(`/${image.id}::width=400,height=400,preview.jpg`)\n    await getImage(`/${image.id}::width=400,height=400.jpg`)\n    await getImage(`/${image.id}::width=900,preview.jpg`)\n    await getImage(`/${image.id}::width=900.jpg`)\n  }\n\n  console.log('image loads complete.')\n}\n\nexport const cacheWarmer = async () => {\n  console.log('warming the cache...')\n  await getIndex()\n    .then((entries) => {\n      loadImages(entries.filter(e => e.type === 'file'))\n\n      return entries\n    })\n}\n"]}