{"version":3,"sources":["/src/server/index.js","/src/server/api.js","/src/server/users/users.js","/src/server/db/index.js","/src/server/collections/api.js","/src/server/collections/collections.js","/src/server/imager/dropbox.js","/src/server/imager/api.js","/src/server/imager/imager.js","/src/server/imager/get-base-image.js","/src/server/users/api.js","/src/server/users/security.js"],"names":[],"mappings":"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","file":"","sourcesContent":["require('dotenv').config()\n\n// include other main deps\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport compression from 'compression'\nimport session from 'express-session'\nimport sslRedirect from 'heroku-ssl-redirect'\nimport path from 'path'\nimport http from 'http'\nimport fs from 'fs'\nimport favicon from 'serve-favicon'\n\n// API\nimport api from './api'\nimport imagerApi from './imager/api'\nimport usersApi from './users/api'\n\n// other\nimport { cacheWarmer } from './imager/cache-warmer'\n\n// instantiate express\nconst app = express()\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// force SSL on production\napp.use(sslRedirect([\n  'development',\n  'production',\n]))\n\napp.use(session({\n  secret: 'my cat',\n  resave: false,\n  saveUninitialized: true,\n}))\napp.use(cookieParser())\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(compression())\n\n// static serving from /dist/client\nconst staticPath = path.join(__dirname, `../${isProduction ? 'dist' : '.dist-dev'}/client`)\nconsole.log(`serving static content from ${staticPath}`)\napp.use(express.static(staticPath))\napp.use(favicon(path.join(__dirname, '../src/client/images', 'favicon.ico')))\n\n// add api layers\napp.use('/api', api)\napp.use('/user', usersApi)\napp.use('/i', imagerApi)\n\n// all other client requests that lack an extension redirected to client\napp.get(/.*(?<!\\.\\w{1,4})$/, (req, res) => {\n  console.log('redirecting request for', req.path, 'to', staticPath + '/index.html')\n  res.sendFile('/index.html', { root: staticPath })\n})\n\nconst serverPort = process.env.PORT || 3000\nconst server = http.createServer(app)\n\nserver.listen(serverPort)\nconsole.log(`Express server @ http://localhost:${serverPort} (${isProduction ? 'production' : 'development'})\\n`)\n\n// warm the cache\n// cacheWarmer()\n","import express from 'express'\nimport globby from 'globby'\nimport apicache from 'apicache'\n\nimport { collection } from './db'\nimport { isAuthenticated, isAdmin } from './users/users'\nimport collectionsApi from './collections/api'\n\n// create an express app\nconst app = express()\nconst cache = apicache.middleware\n\napp.use('/collections', collectionsApi)\n\napp.get('/env', isAdmin, (req, res) => {\n  res.json(process.env)\n})\n\n// 404\napp.get('*', (req, res) => {\n  res.sendStatus(404)\n})\n\n// export the express app\nexport default app\n","import { collection } from '../db'\nimport { getHash, checkPassword } from './security'\n\nexport const getUsersList = () => collection('users').find({})\n\nexport const createUser = async (profile) =>\n  await collection('users')\n    .create(Object.assign({\n      dateCreated: new Date()\n    }, profile))\n\nexport const getUser = async (match) => collection('users').find(match)\n\nexport const isAuthenticated = (req, res, next) =>\n  req.session.user\n  ? (req.user = req.session.user) && next()\n  : res.sendStatus(401)\n\nexport const isAdmin = (req, res, next) =>\n  req.session.user & req.session.user.email === 'krwhitley@gmail.com'\n  ? next()\n  : res.sendStatus(401)\n","import { MongoClient } from 'mongodb'\n\nconst {\n  DB_USER,\n  DB_PASSWORD,\n  DB_DATABASE,\n  DB_URI,\n} = process.env\n\nconst shards = (uri) => Array(3).fill(0).map((v,i) => uri.replace(/^(.*)?-(.*)$/, `$1-shard-00-0${i}-$2`))\nconst replicaSet = (uri) => uri.replace(/^(.*)?-(.*)$/, `$1-shard-0`)\n\nexport const URI = `mongodb://${DB_USER}:${DB_PASSWORD}@${shards(DB_URI).join(',')}/${DB_DATABASE}?replicaSet=${replicaSet(DB_URI)}&ssl=true&authSource=admin`\n\nconst db = {\n  connection: undefined,\n}\n\nMongoClient\n  .connect(URI, { useNewUrlParser: true })\n  .then((client) => {\n    console.log('connected to database.')\n    db.connection = client.db(DB_DATABASE)\n  })\n  .catch((err) => {\n    console.log('error', err)\n  })\n\nconst find = (collection) => (match) =>\n  collection\n    .find(match)\n    .toArray()\n\nconst remove = (collection) => (condition) => {\n  console.log('deleting from', collection, 'where', condition)\n  return collection.deleteOne(condition || { safe: true })\n}\n\nconst create = (collection) => (content = {}) => collection.insertOne(content)\n\nconst update = (collection) =>\n  (slug, content = {}) =>\n    collection\n      .updateOne(\n        { slug },\n        { $set: content },\n        // { upsert: true },\n      )\n      .then(find(collection)({ slug }))\n\nexport const collection = (name) => {\n  return {\n    create: create(db.connection.collection(name)),\n    find: find(db.connection.collection(name)),\n    update: update(db.connection.collection(name)),\n    remove: remove(db.connection.collection(name)),\n  }\n}\n\nexport default (collectionName) => {\n  if (!db.connection) {\n    return throw new Error('database connection not instantiated before use')\n  }\n\n  return db.connection.collection(collectionName)\n}\n","import express from 'express'\nimport {\n  createCollection,\n  getCollection,\n  getCollections,\n  getCollectionList,\n  getCollectionItems,\n  syncCollection,\n  isAvailable,\n  addItemToCollection,\n  removeItemFromCollection,\n  updateItemInCollection,\n} from './collections'\nimport { isAuthenticated } from '../users/users'\nimport db, { collection } from '../db'\n\nconst app = express()\n\n// GET colections index\napp.get('/', async (req, res) => {\n  let result = await getCollections()\n\n  if (!result) {\n    return res.sendStatus(404)\n  }\n\n  res.json(result)\n})\n\n// GET collection\napp.get('/:slug', async (req, res) => {\n  let { slug } = req.params\n\n  let result = await getCollection({ slug })\n\n  if (!result) {\n    return res.sendStatus(404)\n  }\n\n  delete result.source\n  delete result.owner\n  delete result._id\n  result.items = result.items || []\n  result.items = result.items.map(i => {\n    delete i.filename\n    delete i.size\n\n    return i\n  })\n\n  res.json(result)\n\n  let syncResponse = await syncCollection({ slug })\n                            .catch(err => console.error(err))\n})\n\n// GET collection items\napp.get('/:slug/items', async (req, res) => {\n  let { slug, item } = req.params\n\n  let items = await getCollectionItems({ slug })\n                      .catch(err => console.error(err))\n\n  items ? res.json(await items) : res.sendStatus(400)\n})\n\n// GET collection item (single) by id\napp.get('/:slug/items/:id', async (req, res) => {\n  let { slug, id } = req.params\n\n  let allItems = await getCollectionItems({ slug })\n                        .catch(err => console.error(err))\n\n  res.json(allItems.find(i => i.id === id))\n})\n\n// PATCH collection item (single) by id\napp.patch('/:slug/items/:id', isAuthenticated, async (req, res) => {\n  let { slug, id } = req.params\n  let { user } = req\n  let content = req.body\n\n  let update = await updateItemInCollection({ slug, owner: user._id })(id)(content)\n                      .catch(err => console.error(err))\n\n  let results = await getCollection({ slug })\n                      .catch(err => res.sendStatus(500))\n\n  res.json(await results)\n})\n\n// GET collection sync (trigger)\napp.get('/:slug/sync', async (req, res) => {\n  let { slug } = req.params\n\n  let syncResponse = await syncCollection({ slug })\n                            .catch(err => console.error(err))\n\n  return res.json(syncResponse)\n  console.log('syncResponse = ', syncResponse)\n\n  let response = await getCollection({ slug }).catch(err => console.error(err))\n\n  response ? res.json(await response) : res.sendStatus(400)\n})\n\n// GET collection name is available (returns 200 || 409)\napp.get('/:slug/available', async (req, res) => {\n  let available = await isAvailable(req.params.slug)\n\n  res.sendStatus(available ? 200 : 409)\n})\n\n// PATCH collection update\napp.patch('/:slug', isAuthenticated, async (req, res) => {\n  const collections = collection('collections')\n  const { slug } = req.params\n  const { user } = req\n\n  await collections.update(slug, req.body)\n          .catch((err) => {\n            console.error(err)\n            res.sendStatus(400)\n          })\n\n  let response = await getCollections({ slug })\n  user.collections = await getCollections({ owner: String(user._id) })\n\n  if (response) {\n    res.json(response)\n  } else {\n    res.sendStatus(400)\n  }\n})\n\n// DELETE collection\napp.delete('/:slug', isAuthenticated, async (req, res) => {\n  const collections = collection('collections')\n  const { slug } = req.params\n  const { user } = req\n\n  let response = await collections.remove({ slug, owner: String(user._id) })\n  user.collections = await getCollections({ owner: String(user._id) })\n\n  if (response) {\n    res.json(response)\n  } else {\n    res.sendStatus(400)\n  }\n})\n\n// POST collection\napp.post('/', isAuthenticated, async (req, res) => {\n  let { name, slug } = req.body\n  let { user } = req\n\n  let available = await isAvailable(slug)\n\n  if (!available) {\n    return res.sendStatus(409)\n  }\n\n  let response = await createCollection(req.user)(req.body)\n                          .catch((err) => {\n                            console.error(err)\n                            res.sendStatus(400)\n                          })\n\n  user.collections = await getCollections({ owner: String(user._id) })\n\n  if (response) {\n    res.json(response.ops[0])\n  } else {\n    res.sendStatus(400)\n  }\n})\n\nexport default app\n","import db from '../db'\nimport { getIndex } from '../imager/dropbox'\n\nexport const createCollection = (user) => async (content) => {\n  if (!user || !user._id) {\n    return false\n  }\n\n  // extend content with dates and owner\n  content = Object.assign({\n              dateCreated: new Date(),\n              dateModified: new Date(),\n              owner: user._id,\n            }, content)\n\n  console.log('creating collection', content)\n\n  return db('collections').insertOne(content)\n}\n\nexport const isAvailable = (slug) => db('collections')\n                                      .findOne({ slug })\n                                      .then(r => !r)\n\nexport const addItemToCollection = ({ slug, owner }) => (item) => {\n  console.log('adding item to collection', slug, item)\n\n  return db('collections')\n    .updateOne(\n      {\n        slug,\n        owner,\n        'items.item.id': { $ne: item.id },\n      },\n      {\n        $addToSet: { items: item },\n      }\n    )\n}\n\nexport const removeItemFromCollection = ({ slug, owner }) => (where) =>\n  db('collections')\n    .updateMany(\n      { slug, owner },\n      {\n        $pull: {\n          items: where,\n        }\n      }\n    )\n\nexport const updateItemInCollection = ({ slug, owner }) => (id) => (content) => {\n  const updateify = (content) => {\n    let base = Object.keys(content).reduce((obj, key) => {\n      obj[`items.$.${key}`] = content[key]\n\n      return obj\n    }, {})\n\n    base['items.$.dateModified'] = new Date()\n\n    console.log('updateify', content, base)\n\n    return base\n  }\n\n\n  return db('collections')\n    .updateOne(\n      {\n        slug,\n        owner,\n        'items.id': id,\n      },\n      {\n        $set: updateify(content),\n      }\n    )\n}\n\nexport const getCollection = (where = {}) => db('collections').findOne(where)\n\nexport const getCollections = (where = {}) => db('collections')\n                                                .find(where, {\n                                                  items: 0,\n                                                })\n                                                .toArray()\n\nexport const getCollectionList = (where = {}) => db('collections')\n                                          .find(where)\n                                          .toArray()\n\nexport const getCollectionItems = (where = {}) => db('collections')\n                                          .findOne(where)\n                                          .then(r => r.items || [])\n\nexport const getCollectionItem = (where = {}) => (itemWhere = {}) => db('collections')\n                                          .findOne(where, { foo: 1, dateCreated: 0 })\n                                          .then(r => r.items || [])\n\nexport const syncCollection = async (where = {}) => {\n  try {\n    let collection = await getCollection(where)\n    let collectionItems = collection.items || []\n\n    console.log('collection', where, '-->', collection)\n    let { source, owner, slug } = collection\n\n    if (!source || !source.apiKey) return false\n\n    let dropboxItems = await getIndex(source.apiKey) || []\n\n    for (var dbItem of dropboxItems) {\n      if (!collectionItems.find(i => i.id === dbItem.id)) {\n        console.log('id', dbItem.id, 'not found in collection... inserting', dbItem)\n        await addItemToCollection({ slug, owner })(dbItem)\n      }\n    }\n\n    for (var collectionItem of collectionItems) {\n      if (!dropboxItems.find(i => i.id === collectionItem.id)) {\n        console.log('id', collectionItem.id, 'not found in dropbox... removing from collection/archiving')\n        removeItemFromCollection({ slug, owner })({ id: collectionItem.id })\n        // TODO: clean up files\n      }\n    }\n\n    return {\n      collectionItems,\n      dropboxItems,\n    }\n\n  } catch(err) {\n    throw new Error(err)\n  }\n}\n","import { Dropbox } from 'dropbox'\nimport fetch from 'isomorphic-fetch'\n\nconst toFileItem = (i) => ({\n  id: i.rev,\n  filename: i.name,\n  folder: i.path_display.replace(/(.*\\/).*/gi, '$1'),\n  size: i.size,\n  dateCreated: i.server_modified,\n})\n\nexport const getIndex = (accessToken) => {\n  console.log('dropbox:filesListFolder')\n  var dbx = new Dropbox({ accessToken, fetch })\n\n  return dbx\n    .filesListFolder({\n      recursive: true,\n      path: '',\n    })\n    .then(r => r.entries)\n    .then(entries => entries.filter(i => i['.tag'] === 'file'))\n    .then(entries => entries.map(toFileItem))\n    .catch(console.error)\n}\n\nexport const download = (accessToken, path) => {\n  console.log('dropbox:filesDownload', { path: `rev:${path}` })\n  var dbx = new Dropbox({ accessToken, fetch })\n\n  return dbx.filesDownload({ path: `rev:${path}` })\n    .then((response) => {\n      console.log(`${path} downloaded`)\n      return response.fileBinary\n    })\n    .catch(console.error)\n}\n","import express from 'express'\nimport { getImage } from './imager.js'\n\nconst app = express()\n\n// single route catches all requests to imager and passes them to worker\napp.get('*.(png|jpg)', (req, res) => {\n  getImage(req.path)\n    .then((image) => {\n      res.type('image/jpeg')\n      res.set('Cache-Control', \"public, max-age=345600\") // 4 days\n      res.set('Expires', new Date(Date.now() + 345600000).toUTCString())\n\n      res.end(image)\n    })\n    .catch((err) => {\n      console.error(err)\n      res.status(500).send(err)\n    })\n})\n\nexport default app\n\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { getBaseImage } from './get-base-image'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\nexport const getImage = (requestedImagePath) => {\n  console.log('getImage:', requestedImagePath)\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let collectionId = decodedPath.replace(/\\/([^\\/]+).*/g, '$1')\n    let optionsSegment = decodedPath.replace(/^.*::(.*)\\.\\w{3,4}$/i, '$1') || ''\n    let revisionId = decodedPath.replace(/.*\\/(\\w+).*/g, '$1')\n    let options = optionsSegment\n                    .split(',')\n                    .reduce((a, b) => {\n                      let [ key, value ] = b.split('=')\n\n                      if (value === undefined) {\n                        a[key] = true\n                      } else {\n                        let numValue = Number(value)\n\n                        a[key] = isNaN(numValue) ? value : numValue\n                      }\n\n                      return a\n                    }, {})\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n\n    console.log('getImage', {\n      requestedImagePath,\n      decodedPath,\n      collectionId,\n      optionsSegment,\n      revisionId,\n      options,\n      savefolder,\n      savepath,\n    })\n\n    let file = await getBaseImage(`/${collectionId}/${revisionId}.jpg`)\n      .catch((err) => console.error('failure fetching image', err))\n\n    let image = sharp(file).rotate()\n\n    if (options.preview) {\n      if (options.width) {\n        options.width = 75\n      }\n\n      if (options.height) {\n        options.height = 75\n      }\n\n      options.quality = 70\n      options.fit = (options.height && options.width ? 'cover' : 'inside'\n\n      console.log('generating preview', options)\n    } else {\n      console.log('generating fragment', options)\n    }\n\n    let data = await image\n      .resize({\n        width: options.width,\n        height: options.height,\n        fit: options.fit || 'cover',\n      })\n      .jpeg({\n        quality: options.quality || 90,\n      })\n      .toFile(savepath)\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  })\n})\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { download } from './dropbox'\nimport { getCollection } from '../collections/collections'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// gets image locally, or downloads from dropbox and returns the saved image\nexport const getBaseImage = async (requestedImagePath) => {\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let collectionId = decodedPath.replace(/\\/([^\\/]+).*/g, '$1')\n    let revisionId = decodedPath.replace(/.*\\/(\\w+).*/g, '$1')\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n    let originalpath = savefolder + '/' + collectionId + '/' + revisionId + '.jpg'\n\n    console.log('getBaseImage', {\n      requestedImagePath,\n      decodedPath,\n      collectionId,\n      revisionId,\n      savefolder,\n      savepath,\n      originalpath,\n    })\n\n    // throw new Error('exit')\n\n    let image = await fs.promises.readFile(originalpath)\n                        .catch((err) => console.log('loading image from dropbox...'))\n\n    // download image from dropbox if not found base locally\n    if (!image) {\n      let collection = await getCollection({ slug: collectionId })\n      let { source } = collection\n      console.log('found apiKey', source.apiKey, 'for collection', collectionId)\n      let binary = await download(source.apiKey, revisionId)\n\n      console.log('making savefolder', savefolder)\n      // ensure folder exists before file stream opening\n      await fs.promises.mkdir(savefolder + '/' + collectionId, { recursive: true }).catch(e => e)\n\n      console.log('saving base image', originalpath)\n      let image = await sharp(binary)\n        .rotate()\n        .jpeg({ quality: 95 })\n        .toFile(originalpath)\n    }\n\n    console.log('returning', savepath)\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  }\n}\n","import express from 'express'\nimport Blowfish from 'xs-blowfish'\nimport {\n  isAuthenticated,\n  isAdmin,\n  validateUser,\n  createUser,\n  getUser,\n  getUsersList,\n} from './users'\nimport { getCollections } from '../collections/collections'\nimport { getHash, checkPassword } from './security'\n\nconst app = express()\n\nconst safeUserProfile = (user) => {\n  let response = Object.assign({}, user)\n\n  delete response._id\n  delete response.apiKey\n  delete response.password\n\n  return response\n}\n\napp.get('/all', isAuthenticated, isAdmin, async (req, res) => {\n  let users = await getUsersList()\n    .catch((err) => res.status(400).json(err))\n\n  console.log('users', users)\n\n  res.json(users)\n})\n\napp.get('/profile', isAuthenticated, async (req, res) => {\n  let { user } = req\n  let response = safeUserProfile(user)\n  response.collections = await getCollections({ owner: user._id })\n\n  res.json(response)\n})\n\napp.get('/collections', isAuthenticated, async (req, res) => {\n  let { user } = req\n  let response = await getCollections({ owner: user._id })\n\n  response ? res.json(response) : res.sendStatus(400)\n})\n\napp.get('/logout', (req, res) => {\n  delete req.session.user\n\n  res.sendStatus(200)\n})\n\napp.post('/login', async (req, res) => {\n  let { email, password } = req.body\n\n  if (!email || !password) {\n    return res.sendStatus(400)\n  }\n\n  let user = await getUser({ email })\n                    .then(users => users[0])\n                    .catch(() => {\n                      console.log('user not found with email', email)\n                      res.sendStatus(401)\n                    })\n\n  if (user) {\n    console.log('user found', user)\n    let valid = await checkPassword(password, user.password)\n\n    if (valid) {\n      // decrpyt API token\n      // let bf = new Blowfish(user.password)\n      // user.apiKey = bf.decrypt(user.apiKey)\n\n      // console.log('decrypted API key', user.apiKey)\n      console.log('getting collections where', { owner: String(user._id) })\n      let collections = await getCollections({ owner: String(user._id) })\n\n      console.log('matching collections', collections)\n\n      user.collections = collections\n      req.session.user = user\n\n      res.json(safeUserProfile(user))\n    } else {\n      res.sendStatus(401)\n    }\n  } else {\n    res.sendStatus(401)\n  }\n})\n\napp.post('/signup', async (req, res) => {\n  let { email, password, passwordConfirmation, apiKey } = req.body\n\n  if (!email || !password) {\n    return res.sendStatus(400)\n  }\n\n  let existingUser = await getUser({ email })\n                            .then(users => users[0])\n                            .catch(() => {})\n\n  if (existingUser) {\n    return res.sendStatus(409)\n  }\n\n  password = await getHash(password)\n\n  console.log('hash', password)\n\n  // encrypt apiKey based on new password\n  let bf = new Blowfish(password)\n  console.log('apiKey', apiKey)\n  apiKey = apiKey ? bf.encrypt(apiKey) : undefined\n  console.log('encrypted apiKey', apiKey)\n\n  await createUser({ email, password, apiKey }).catch(() => res.sendStatus(401))\n\n  let user = await getUser({ email, password })\n                    .then(users => users[0])\n                    .catch(() => res.sendStatus(401))\n\n  if (user) {\n    req.session.user = user\n    res.json(user)\n  }\n})\n\nexport default app\n","import bcrypt from 'bcryptjs'\n\nconst saltRounds = 8\n\nexport const getHash = (password) => bcrypt.hash(password, saltRounds)\n\nexport const checkPassword = (password, hash) => bcrypt.compare(password, hash)\n"]}