{"version":3,"sources":["/src/server/index.js","/src/server/api.js","/src/server/dropbox.js","/src/server/get-base-image.js","/src/server/mongo.js","/src/server/imager-api.js","/src/server/imager.js","/src/server/cache-warmer.js"],"names":[],"mappings":"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","file":"","sourcesContent":["require('dotenv').config()\n\n// include other main deps\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport compression from 'compression'\nimport path from 'path'\nimport http from 'http'\nimport fs from 'fs'\nimport favicon from 'serve-favicon'\n\nimport api from './api'\nimport imager from './imager-api'\nimport { cacheWarmer } from './cache-warmer'\n\n// instantiate express\nconst app = express()\nconst isProduction = process.env.NODE_ENV === 'production'\napp.use(cookieParser())\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(compression())\n\n// static serving from /dist/client\nconst staticPath = path.join(__dirname, `../${isProduction ? 'dist' : '.dist-dev'}/client`)\nconsole.log(`serving static content from ${staticPath}`)\napp.use(express.static(staticPath))\napp.use(favicon(path.join(__dirname, '../src/client/images', 'favicon.ico')))\n\n// add api layers\napp.use('/api', api)\napp.use('/i', imager)\n\n// 404\napp.get('*', (req, res) => {\n  res.sendStatus(404)\n})\n\nconst serverPort = process.env.PORT || 3000\nconst server = http.createServer(app)\n\nserver.listen(serverPort)\nconsole.log(`Express server @ http://localhost:${serverPort} (${isProduction ? 'production' : 'development'})\\n`)\n\n// warm the cache\ncacheWarmer()\n","import express from 'express'\nimport globby from 'globby'\nimport { getIndex, download } from './dropbox'\nimport dropboxFs from 'dropbox-fs'\nimport apicache from 'apicache'\n\nimport { collection } from './mongo'\n\n// create an express app\nconst app = express()\nconst cache = apicache.middleware\n\n// add a route\napp.get('/tmp', async (req, res) => {\n  const paths = await globby(['/Users/kevinwhitley/Documents/*.*']);\n\n  res.json(paths)\n})\n\napp.get('/env', (req, res) => {\n  res.json(process.env)\n})\n\napp.get('/list', cache('30 seconds'), (req, res) => {\n  getIndex().then((response) => res.json(response))\n})\n\napp.get('/images', async (req, res) => {\n  let imageCollection = await collection('images')\n                                .catch(res.status(500).json)\n  let images = await imageCollection\n                      .find({})\n                      .catch(res.status(500).json)\n\n  res.json(images)\n})\n\napp.get('/images/:image_id', async (req, res) => {\n  let { image_id } = req.params\n  let imageCollection = await collection('images')\n                                .catch(res.status(500).json)\n\n  // insert doc\n  await imageCollection\n          .update(image_id, { image_id, bar: 'baz' })\n          .catch(res.status(500).json)\n\n  // get updated/created doc\n  let doc = await imageCollection\n                    .find({ image_id })\n                    .catch(res.status(500).json)\n\n  res.json(doc)\n})\n\n// 404\napp.get('*', (req, res) => {\n  res.sendStatus(404)\n})\n\n// export the express app\nexport default app\n","import { Dropbox } from 'dropbox'\nimport fetch from 'isomorphic-fetch'\nimport { getBaseImage } from './get-base-image'\n\nconst { DROPBOX_ACCESS_TOKEN } = process.env\n\nconst toFileItem = (i) => ({\n  id: i.rev,\n  type: i['.tag'],\n  filename: i.name,\n  folder: i.path_display.replace(/(.*\\/).*/gi, '$1'),\n  size: i.size,\n  date: i.server_modified,\n})\n\nconst loadImages = async (images) => {\n  for (var image of images) {\n    console.log('load image:', image)\n    await getBaseImage(`/${image.id}.jpg`)\n  }\n\n  console.log('image loads complete.')\n}\n\nexport const getIndex = () => {\n  console.log('attempting to use dropbox api')\n  var dbx = new Dropbox({ accessToken: DROPBOX_ACCESS_TOKEN, fetch })\n\n  return dbx\n    .filesListFolder({\n      recursive: true,\n      path: '',\n    })\n    .then((r) => r.entries.map(toFileItem))\n    .then((entries) => {\n      loadImages(entries.filter(e => e.type === 'file'))\n\n      return entries\n    })\n    .catch(console.error)\n}\n\nexport const download = (path) => {\n  console.log('attempting to use dropbox api', { path: `rev:${path}` })\n  var dbx = new Dropbox({ accessToken: DROPBOX_ACCESS_TOKEN, fetch })\n\n  return dbx.filesDownload({ path: `rev:${path}` })\n    .then((response) => {\n      console.log(`${path} downloaded`)\n      return response.fileBinary\n    })\n    .catch(console.error)\n}\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { download } from './dropbox'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// gets image locally, or downloads from dropbox and returns the saved image\nexport const getBaseImage = async (requestedImagePath) => {\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let revisionId = decodedPath.replace(/.*?(\\w+).*/g, '$1')\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n    let originalpath = savefolder + '/' + revisionId + '.jpg'\n\n    let image = await fs.promises.readFile(originalpath)\n                        .then((file) => {\n                          console.log(`${requestedImagePath} found locally.`)\n                          return file\n                        })\n                        .catch((err) => console.log('loading image from dropbox...'))\n\n    if (!image) {\n      let binary = await download(revisionId)\n\n      // ensure folder exists before file stream opening\n      await fs.promises.mkdir(savefolder, { recursive: true }).catch(e => e)\n\n      let image = await sharp(binary)\n        .rotate()\n        .jpeg({ quality: 95 })\n        .toFile(originalpath)\n\n      console.log('loaded.')\n    }\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  }\n}\n","import { MongoClient } from 'mongodb'\n\nconsole.log('loading mongo interface')\n\nconst {\n  DB_USER,\n  DB_PASSWORD,\n  DB_CLUSTER,\n  DB_DATABASE,\n} = process.env\n\nconst connectionStr = `mongodb+srv://${DB_USER}:${DB_PASSWORD}@personal-gallery-8rxci.gcp.mongodb.net/test?retryWrites=true`\n\n// Connect to your MongoDB instance(s)\nexport const getDatabase = () =>\n  MongoClient\n    .connect(connectionStr, { useNewUrlParser: true })\n    .then(client => client.db(DB_DATABASE))\n    .catch(console.error)\n\nconst find = (collection) => {\n  return (match) => {\n    return new Promise((resolve, reject) => {\n      collection\n        .find(match)\n        .toArray(function(err, data) {\n          err\n            ? reject(err)\n            : resolve(data);\n         })\n    }\n  })\n}\n\nconst update = (collection) => {\n  return (id, update = {}) => {\n    return new Promise((resolve, reject) => {\n      collection\n        .update(\n          { id },\n          update,\n          { upsert: true },\n          (err, status) => {\n            err\n              ? reject(err)\n              : resolve(status)\n          },\n        )\n    }\n  })\n}\n\nexport const collection = async (name) => {\n  let db = await getDatabase()\n  let col = db.collection(name)\n\n  return {\n    find: find(col),\n    update: update(col),\n  }\n}\n","import express from 'express'\nimport { getImage } from './imager'\n\nconst app = express()\n\n// single route catches all requests to imager and passes them to worker\napp.get('*.(png|jpg)', (req, res) => {\n  getImage(req.path)\n    .then((image) => {\n      res.type('image/jpeg')\n      res.set('Cache-Control', \"public, max-age=345600\") // 4 days\n      res.set('Expires', new Date(Date.now() + 345600000).toUTCString())\n\n      res.end(image)\n    })\n    .catch((err) => {\n      console.error(err)\n      res.status(500).send(err)\n    })\n})\n\nexport default app\n\n","import fs from 'fs'\nimport sharp from 'sharp'\nimport Path from 'path'\nimport { download } from './dropbox'\nimport { getBaseImage } from './get-base-image'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\nexport const getImage = (requestedImagePath) => {\n  return new Promise(async function(resolve, reject) {\n    let decodedPath = decodeURI(requestedImagePath)\n    let optionsSegment = decodedPath.replace(/^.*::(.*)\\.\\w{3,4}$/i, '$1') || ''\n    let revisionId = decodedPath.replace(/.*?(\\w+).*/g, '$1')\n    let options = optionsSegment\n                    .split(',')\n                    .reduce((a, b) => {\n                      let [ key, value ] = b.split('=')\n\n                      if (value === undefined) {\n                        a[key] = true\n                      } else {\n                        let numValue = Number(value)\n\n                        a[key] = isNaN(numValue) ? value : numValue\n                      }\n\n                      return a\n                    }, {})\n\n    // begin: save final output and stream output to response\n    let savefolder = Path.join(__dirname, `../${isProduction ? 'dist' : '.dist-dev'}/client/i`)\n    let savepath = savefolder + requestedImagePath\n    let file = await getBaseImage(`/${revisionId}.jpg`)\n      .catch((err) => console.error('failure fetching image', err))\n\n    let image = sharp(file).rotate()\n\n    if (options.preview) {\n      if (options.width) {\n        options.width = 75\n      }\n\n      if (options.height) {\n        options.height = 75\n      }\n\n      options.fit = (options.height && options.width ? 'cover' : 'inside'\n\n      console.log('generating preview', options)\n    } else {\n      console.log('generating fragment', options)\n    }\n\n    let data = await image\n      .resize({\n        width: options.width,\n        height: options.height,\n        fit: options.fit || 'cover',\n      })\n      .jpeg({\n        quality: options.quality || 80,\n      })\n      .toFile(savepath)\n\n    fs.promises.readFile(savepath)\n      .then(resolve)\n      .catch(reject)\n    })\n  })\n})\n","import { getIndex } from './dropbox'\n\nexport const cacheWarmer = async () => {\n  console.log('warming the cache...')\n  await getIndex()\n}\n"]}